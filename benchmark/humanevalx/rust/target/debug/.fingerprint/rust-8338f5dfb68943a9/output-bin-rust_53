{"message":"this file contains an unclosed delimiter","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_53.rs","byte_start":264,"byte_end":265,"line_start":13,"line_end":13,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"fn add(x:i32, y:i32) -> i32{","highlight_start":28,"highlight_end":29}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":400,"byte_end":401,"line_start":17,"line_end":17,"column_start":2,"column_end":3,"is_primary":false,"text":[{"text":"\t{","highlight_start":2,"highlight_end":3}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":701,"byte_end":702,"line_start":20,"line_end":20,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"\t\tif let Some(x)=x.deref() { let $v2=$v; $(","highlight_start":28,"highlight_end":29}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":716,"byte_end":717,"line_start":20,"line_end":20,"column_start":43,"column_end":44,"is_primary":false,"text":[{"text":"\t\tif let Some(x)=x.deref() { let $v2=$v; $(","highlight_start":43,"highlight_end":44}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":933,"byte_end":934,"line_start":24,"line_end":24,"column_start":43,"column_end":44,"is_primary":false,"text":[{"text":"\t\t\tif let Some($v) = replace(&$v2,[||]); $(let $v1=$v.deref(), let x=$x.$($v2,$v1); {","highlight_start":43,"highlight_end":44}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":975,"byte_end":976,"line_start":24,"line_end":24,"column_start":85,"column_end":86,"is_primary":false,"text":[{"text":"\t\t\tif let Some($v) = replace(&$v2,[||]); $(let $v1=$v.deref(), let x=$x.$($v2,$v1); {","highlight_start":85,"highlight_end":86}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1142,"byte_end":1143,"line_start":26,"line_end":26,"column_start":11,"column_end":12,"is_primary":false,"text":[{"text":"\t\t\t} else {$v=replace(&$v,0,[$||]; x=$x; $v.set(j,x.clone());","highlight_start":11,"highlight_end":12}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1153,"byte_end":1154,"line_start":26,"line_end":26,"column_start":22,"column_end":23,"is_primary":false,"text":[{"text":"\t\t\t} else {$v=replace(&$v,0,[$||]; x=$x; $v.set(j,x.clone());","highlight_start":22,"highlight_end":23}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1251,"byte_end":1252,"line_start":27,"line_end":27,"column_start":58,"column_end":59,"is_primary":false,"text":[{"text":"\t\t\t\tlet r=[||]; let (r_x,$r_x)=r.tuple(); for $i in 0..j { if i==1 && !r_x.$($v,i) { return max(max(r.$($v,$v1),y).min(x.$(&","highlight_start":58,"highlight_end":59}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1277,"byte_end":1278,"line_start":27,"line_end":27,"column_start":84,"column_end":85,"is_primary":false,"text":[{"text":"\t\t\t\tlet r=[||]; let (r_x,$r_x)=r.tuple(); for $i in 0..j { if i==1 && !r_x.$($v,i) { return max(max(r.$($v,$v1),y).min(x.$(&","highlight_start":84,"highlight_end":85}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1289,"byte_end":1290,"line_start":27,"line_end":27,"column_start":96,"column_end":97,"is_primary":false,"text":[{"text":"\t\t\t\tlet r=[||]; let (r_x,$r_x)=r.tuple(); for $i in 0..j { if i==1 && !r_x.$($v,i) { return max(max(r.$($v,$v1),y).min(x.$(&","highlight_start":96,"highlight_end":97}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1312,"byte_end":1313,"line_start":27,"line_end":27,"column_start":119,"column_end":120,"is_primary":false,"text":[{"text":"\t\t\t\tlet r=[||]; let (r_x,$r_x)=r.tuple(); for $i in 0..j { if i==1 && !r_x.$($v,i) { return max(max(r.$($v,$v1),y).min(x.$(&","highlight_start":119,"highlight_end":120}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1316,"byte_end":1317,"line_start":27,"line_end":27,"column_start":123,"column_end":124,"is_primary":false,"text":[{"text":"\t\t\t\tlet r=[||]; let (r_x,$r_x)=r.tuple(); for $i in 0..j { if i==1 && !r_x.$($v,i) { return max(max(r.$($v,$v1),y).min(x.$(&","highlight_start":123,"highlight_end":124}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1010,"byte_end":1010,"line_start":25,"line_end":25,"column_start":34,"column_end":34,"is_primary":false,"text":[{"text":"\t\t\t\tif i == 0 && j > $v || x > y { return max(max(x,y),j) + (j - min(min($v.get(i as u32).unwrap() & ((x >> i) | 1)), min(x.$($v,$v1)) & ((y >> j) | 1)));","highlight_start":34,"highlight_end":34}],"label":"this delimiter might not be properly closed...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1135,"byte_end":1135,"line_start":26,"line_end":26,"column_start":4,"column_end":4,"is_primary":false,"text":[{"text":"\t\t\t} else {$v=replace(&$v,0,[$||]; x=$x; $v.set(j,x.clone());","highlight_start":4,"highlight_end":4}],"label":"...as it matches this but it has different indentation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_53.rs","byte_start":1828,"byte_end":1828,"line_start":51,"line_end":51,"column_start":3,"column_end":3,"is_primary":true,"text":[{"text":"}","highlight_start":3,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: this file contains an unclosed delimiter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_53.rs:51:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn add(x:i32, y:i32) -> i32{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(x)=x.deref() { let $v2=$v; $(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some($v) = replace(&$v2,[||]); $(let $v1=$v.deref(), let x=$x.$($v2,$v1); {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if i == 0 && j > $v || x > y { return max(max(x,y),j) + (j - min(min($v.get(i as u32).unwrap() & ((x >> i) | 1)), min(x.$(\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis delimiter might not be properly closed...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            } else {$v=replace(&$v,0,[$||]; x=$x; $v.set(j,x.clone());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...as it matches this but it has different indentation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let r=[||]; let (r_x,$r_x)=r.tuple(); for $i in 0..j { if i==1 && !r_x.$($v,i) { return max(max(r.$($v,$v1),y).min(x.$(&\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
