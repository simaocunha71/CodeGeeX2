{"message":"expected expression, found `=>`","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_75.rs","byte_start":849,"byte_end":851,"line_start":29,"line_end":29,"column_start":49,"column_end":51,"is_primary":true,"text":[{"text":"    for (i, &y) in x.iter().enumerate() |i{0..} => y{0..} |i{x}!>x-1 && y |i{y as i32 % 7 == 4 || y % 7 >= 5 ? x - y : false, true } {","highlight_start":49,"highlight_end":51}],"label":"expected expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected expression, found `=>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_75.rs:29:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for (i, &y) in x.iter().enumerate() |i{0..} => y{0..} |i{x}!>x-1 && y |i{y as i32 % 7 == 4 || y % 7 >= 5 ? x - y : false, true } {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected expression\u001b[0m\n\n"}
{"message":"expected one of `=>`, `if`, or `|`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_75.rs","byte_start":1062,"byte_end":1063,"line_start":35,"line_end":35,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"    match (0..).rev().iter() |i{0..} => x![i]!>x-1 && replace(*x, 0) % 2 == 0 || *x % 2 != 0 {","highlight_start":36,"highlight_end":37}],"label":"expected one of `=>`, `if`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `=>`, `if`, or `|`, found `}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_75.rs:35:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match (0..).rev().iter() |i{0..} => x![i]!>x-1 && replace(*x, 0) % 2 == 0 || *x % 2 != 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `=>`, `if`, or `|`\u001b[0m\n\n"}
{"message":"expected expression, found `=>`","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_75.rs","byte_start":1064,"byte_end":1066,"line_start":35,"line_end":35,"column_start":38,"column_end":40,"is_primary":true,"text":[{"text":"    match (0..).rev().iter() |i{0..} => x![i]!>x-1 && replace(*x, 0) % 2 == 0 || *x % 2 != 0 {","highlight_start":38,"highlight_end":40}],"label":"expected expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected expression, found `=>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_75.rs:35:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match (0..).rev().iter() |i{0..} => x![i]!>x-1 && replace(*x, 0) % 2 == 0 || *x % 2 != 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected expression\u001b[0m\n\n"}
{"message":"expected one of `=>`, `if`, or `|`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_75.rs","byte_start":1343,"byte_end":1344,"line_start":42,"line_end":42,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"    match (0..).rev().iter() |i{0..} => a![i]!>x-1 && replace(*a, 0) % 2 == 0 || *a % 2 != 0 {","highlight_start":36,"highlight_end":37}],"label":"expected one of `=>`, `if`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `=>`, `if`, or `|`, found `}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_75.rs:42:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match (0..).rev().iter() |i{0..} => a![i]!>x-1 && replace(*a, 0) % 2 == 0 || *a % 2 != 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `=>`, `if`, or `|`\u001b[0m\n\n"}
{"message":"expected expression, found `=>`","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_75.rs","byte_start":1345,"byte_end":1347,"line_start":42,"line_end":42,"column_start":38,"column_end":40,"is_primary":true,"text":[{"text":"    match (0..).rev().iter() |i{0..} => a![i]!>x-1 && replace(*a, 0) % 2 == 0 || *a % 2 != 0 {","highlight_start":38,"highlight_end":40}],"label":"expected expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected expression, found `=>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_75.rs:42:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match (0..).rev().iter() |i{0..} => a![i]!>x-1 && replace(*a, 0) % 2 == 0 || *a % 2 != 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected expression\u001b[0m\n\n"}
{"message":"expected one of `!`, `+`, `::`, `where`, or `{`, found `#`","code":null,"level":"error","spans":[{"file_name":"src/bin/rust_75.rs","byte_start":1596,"byte_end":1596,"line_start":50,"line_end":50,"column_start":41,"column_end":41,"is_primary":false,"text":[{"text":"fn get_primes() -> HashMap<u64,Vec<i32>>","highlight_start":41,"highlight_end":41}],"label":"expected one of `!`, `+`, `::`, `where`, or `{`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bin/rust_75.rs","byte_start":1598,"byte_end":1599,"line_start":52,"line_end":52,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"#[cfg(test)]","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `+`, `::`, `where`, or `{`, found `#`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/rust_75.rs:52:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn get_primes() -> HashMap<u64,Vec<i32>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected one of `!`, `+`, `::`, `where`, or `{`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(test)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
