{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_97","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_97.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: mismatched closing delimiter: `}`\n  --> src/bin/rust_97.rs:35:32\n   |\n35 | ...) if (*res >= **b[idx].0 && *res <= (max(**b[idx], *a.clone())).0 + (**a.clone()).1 => set.insert(*a),Some(_) | None| _=>()};\n   |         ^ unclosed delimiter                                                                                                  ^ mismatched closing delimiter\n\n","children":[],"code":null,"level":"error","message":"mismatched closing delimiter: `}`","spans":[{"byte_end":1193,"byte_start":1192,"column_end":151,"column_start":150,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":true,"label":"mismatched closing delimiter","line_end":35,"line_start":35,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":151,"highlight_start":150,"text":"                    Some(_) if (*res >= **b[idx].0 && *res <= (max(**b[idx], *a.clone())).0 + (**a.clone()).1 => set.insert(*a),Some(_) | None| _=>()};"}]},{"byte_end":1075,"byte_start":1074,"column_end":33,"column_start":32,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":true,"label":"unclosed delimiter","line_end":35,"line_start":35,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":32,"text":"                    Some(_) if (*res >= **b[idx].0 && *res <= (max(**b[idx], *a.clone())).0 + (**a.clone()).1 => set.insert(*a),Some(_) | None| _=>()};"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_97","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_97.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: mismatched closing delimiter: `}`\n  --> src/bin/rust_97.rs:40:32\n   |\n40 | ...if (*res >= (**a.clone()).0 + (max(*a).clone(), **b[idx].0).0 - (max(*a).clone(), **a.clone()).1 => set.insert(*a),Some(_) | None| _=>(...\n   |       ^ unclosed delimiter                                                                                                                 ^ mismatched closing delimiter\n\n","children":[],"code":null,"level":"error","message":"mismatched closing delimiter: `}`","spans":[{"byte_end":1510,"byte_start":1509,"column_end":166,"column_start":165,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":true,"label":"mismatched closing delimiter","line_end":40,"line_start":40,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":166,"highlight_start":165,"text":"                    Some(_) if (*res >= (**a.clone()).0 + (max(*a).clone(), **b[idx].0).0 - (max(*a).clone(), **a.clone()).1 => set.insert(*a),Some(_) | None| _=>()};"}]},{"byte_end":1377,"byte_start":1376,"column_end":33,"column_start":32,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":true,"label":"unclosed delimiter","line_end":40,"line_start":40,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":32,"text":"                    Some(_) if (*res >= (**a.clone()).0 + (max(*a).clone(), **b[idx].0).0 - (max(*a).clone(), **a.clone()).1 => set.insert(*a),Some(_) | None| _=>()};"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_97","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_97.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this file contains an unclosed delimiter\n  --> src/bin/rust_97.rs:67:3\n   |\n2  | fn main(){ \n   |          - this delimiter might not be properly closed...\n3  |  } \n   |  - ...as it matches this but it has different indentation\n...\n46 | fn add_all_u8(a: u8, b:Vec<u8>) -> HashSet<u8> {\n   |                                                - unclosed delimiter\n47 |     let mut res:HashSet<u8>=add_all(a.into(), &b); \n48 |     match b[0] {\n   |                - unclosed delimiter\n49 |         Some(_) if (*res >= (**a).0 + (max(*a).clone(), **b.first().unwrap()).0 - (max(*a\n   |                    -                                                              -   - unclosed delimiter\n   |                    |                                                              |\n   |                    unclosed delimiter                                             unclosed delimiter\n...\n67 | }\n   |   ^\n\n","children":[],"code":null,"level":"error","message":"this file contains an unclosed delimiter","spans":[{"byte_end":1609,"byte_start":1608,"column_end":49,"column_start":48,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"unclosed delimiter","line_end":46,"line_start":46,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":48,"text":"fn add_all_u8(a: u8, b:Vec<u8>) -> HashSet<u8> {"}]},{"byte_end":1678,"byte_start":1677,"column_end":17,"column_start":16,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"unclosed delimiter","line_end":48,"line_start":48,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":16,"text":"    match b[0] {"}]},{"byte_end":1699,"byte_start":1698,"column_end":21,"column_start":20,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"unclosed delimiter","line_end":49,"line_start":49,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":20,"text":"        Some(_) if (*res >= (**a).0 + (max(*a).clone(), **b.first().unwrap()).0 - (max(*a"}]},{"byte_end":1762,"byte_start":1761,"column_end":84,"column_start":83,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"unclosed delimiter","line_end":49,"line_start":49,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":84,"highlight_start":83,"text":"        Some(_) if (*res >= (**a).0 + (max(*a).clone(), **b.first().unwrap()).0 - (max(*a"}]},{"byte_end":1766,"byte_start":1765,"column_end":88,"column_start":87,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"unclosed delimiter","line_end":49,"line_start":49,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":88,"highlight_start":87,"text":"        Some(_) if (*res >= (**a).0 + (max(*a).clone(), **b.first().unwrap()).0 - (max(*a"}]},{"byte_end":10,"byte_start":10,"column_end":10,"column_start":10,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"this delimiter might not be properly closed...","line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":10,"text":"fn main(){ "}]},{"byte_end":14,"byte_start":14,"column_end":2,"column_start":2,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":false,"label":"...as it matches this but it has different indentation","line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":2,"highlight_start":2,"text":" } "}]},{"byte_end":2188,"byte_start":2188,"column_end":3,"column_start":3,"expansion":null,"file_name":"src/bin/rust_97.rs","is_primary":true,"label":null,"line_end":67,"line_start":67,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":3,"highlight_start":3,"text":"}"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_97","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_97.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to 3 previous errors\n\n","children":[],"code":null,"level":"error","message":"aborting due to 3 previous errors","spans":[]}}
{"reason":"build-finished","success":false}
