{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_91","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_91.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: character literal may only contain one codepoint\n  --> src/bin/rust_91.rs:22:43\n   |\n22 |     } else if r[..].iter().all(|&e| e == !'?\"' && &\"'\" != &!'\"') {\n   |                                           ^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n   |\n22 |     } else if r[..].iter().all(|&e| e == !\"?\\\"\" && &\"'\" != &!'\"') {\n   |                                           ~~~~~\n\n","children":[{"children":[],"code":null,"level":"help","message":"if you meant to write a `str` literal, use double quotes","rendered":null,"spans":[{"byte_end":742,"byte_start":738,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":22,"line_start":22,"suggested_replacement":"\"?\\\"\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":43,"text":"    } else if r[..].iter().all(|&e| e == !'?\"' && &\"'\" != &!'\"') {"}]}]}],"code":null,"level":"error","message":"character literal may only contain one codepoint","spans":[{"byte_end":742,"byte_start":738,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":22,"line_start":22,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":43,"text":"    } else if r[..].iter().all(|&e| e == !'?\"' && &\"'\" != &!'\"') {"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_91","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_91.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: character literal may only contain one codepoint\n  --> src/bin/rust_91.rs:24:43\n   |\n24 |     } else if r[..].iter().all(|&e| e == !'?\"' && &\"'\" != &!'\"') {\n   |                                           ^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n   |\n24 |     } else if r[..].iter().all(|&e| e == !\"?\\\"\" && &\"'\" != &!'\"') {\n   |                                           ~~~~~\n\n","children":[{"children":[],"code":null,"level":"help","message":"if you meant to write a `str` literal, use double quotes","rendered":null,"spans":[{"byte_end":900,"byte_start":896,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":24,"line_start":24,"suggested_replacement":"\"?\\\"\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":43,"text":"    } else if r[..].iter().all(|&e| e == !'?\"' && &\"'\" != &!'\"') {"}]}]}],"code":null,"level":"error","message":"character literal may only contain one codepoint","spans":[{"byte_end":900,"byte_start":896,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":24,"line_start":24,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":43,"text":"    } else if r[..].iter().all(|&e| e == !'?\"' && &\"'\" != &!'\"') {"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_91","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_91.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: character literal may only contain one codepoint\n  --> src/bin/rust_91.rs:38:43\n   |\n38 |     }) && r.iter().all(|e| e != '\"'\" && &\"'\" != &\"'\"') {\n   |                                           ^^^^^^^^^\n   |\nhelp: if you meant to write a `str` literal, use double quotes\n   |\n38 |     }) && r.iter().all(|e| e != '\"'\" && &\"\"\\\" != &\\\"\"\"') {\n   |                                           ~~~~~~~~~~~\n\n","children":[{"children":[],"code":null,"level":"help","message":"if you meant to write a `str` literal, use double quotes","rendered":null,"spans":[{"byte_end":1458,"byte_start":1449,"column_end":52,"column_start":43,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"\"\\\" != &\\\"\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":43,"text":"    }) && r.iter().all(|e| e != '\"'\" && &\"'\" != &\"'\"') {"}]}]}],"code":null,"level":"error","message":"character literal may only contain one codepoint","spans":[{"byte_end":1458,"byte_start":1449,"column_end":52,"column_start":43,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":43,"text":"    }) && r.iter().all(|e| e != '\"'\" && &\"'\" != &\"'\"') {"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_91","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_91.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0762]: unterminated character literal\n  --> src/bin/rust_91.rs:45:40\n   |\n45 |     let r = replace_all(&s[..], \"!?\", \"'\n   |                                        ^\n\n","children":[],"code":{"code":"E0762","explanation":"A character literal wasn't ended with a quote.\n\nErroneous code example:\n\n```compile_fail,E0762\nstatic C: char = '●; // error!\n```\n\nTo fix this error, add the missing quote:\n\n```\nstatic C: char = '●'; // ok!\n```\n"},"level":"error","message":"unterminated character literal","spans":[{"byte_end":1596,"byte_start":1595,"column_end":41,"column_start":40,"expansion":null,"file_name":"src/bin/rust_91.rs","is_primary":true,"label":null,"line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":40,"text":"    let r = replace_all(&s[..], \"!?\", \"'"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_91","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_91.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to 4 previous errors\n\n","children":[],"code":null,"level":"error","message":"aborting due to 4 previous errors","spans":[]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_91","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_91.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"For more information about this error, try `rustc --explain E0762`.\n","children":[],"code":null,"level":"failure-note","message":"For more information about this error, try `rustc --explain E0762`.","spans":[]}}
{"reason":"build-finished","success":false}
