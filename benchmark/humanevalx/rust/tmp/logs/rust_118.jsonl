{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_118","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_118.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0758]: unterminated block comment\n  --> src/bin/rust_118.rs:24:5\n   |\n24 | /     /*\n25 | |     Find the closest vowel between x and z, which doesn't contain any consonant from right side of word.\n26 | |     let mut x_closest: &str;\n27 | |     let mut z_closest: &str;\n...  |\n75 | |\n76 | | }\n   | |__^\n\n","children":[],"code":{"code":"E0758","explanation":"A multi-line (doc-)comment is unterminated.\n\nErroneous code example:\n\n```compile_fail,E0758\n/* I am not terminated!\n```\n\nThe same goes for doc comments:\n\n```compile_fail,E0758\n/*! I am not terminated!\n```\n\nYou need to end your multi-line comment with `*/` in order to fix this error:\n\n```\n/* I am terminated! */\n/*! I am also terminated! */\n```\n"},"level":"error","message":"unterminated block comment","spans":[{"byte_end":3080,"byte_start":700,"column_end":3,"column_start":5,"expansion":null,"file_name":"src/bin/rust_118.rs","is_primary":true,"label":null,"line_end":76,"line_start":24,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":5,"text":"    /*"},{"highlight_end":105,"highlight_start":1,"text":"    Find the closest vowel between x and z, which doesn't contain any consonant from right side of word."},{"highlight_end":29,"highlight_start":1,"text":"    let mut x_closest: &str;"},{"highlight_end":29,"highlight_start":1,"text":"    let mut z_closest: &str;"},{"highlight_end":49,"highlight_start":1,"text":"    // Get hash map of all possible combinations"},{"highlight_end":39,"highlight_start":1,"text":"    let mut hash_map = HashMap::new();"},{"highlight_end":50,"highlight_start":1,"text":"    for (i, &vowel) in word.chars().enumerate() {"},{"highlight_end":54,"highlight_start":1,"text":"        if i > 7 && !(vowel == 'e' || vowel == 'a') {"},{"highlight_end":22,"highlight_start":1,"text":"            continue;"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":47,"highlight_start":1,"text":"        match hash_map.entry((i - 1, vowel)) {"},{"highlight_end":130,"highlight_start":1,"text":"            hashmap::Entry::Occupied(occup) => occup.get().0.push(x), // Add current vowel to all combinations we've tried before"},{"highlight_end":20,"highlight_start":1,"text":"            _ => {}"},{"highlight_end":11,"highlight_start":1,"text":"        };"},{"highlight_end":6,"highlight_start":1,"text":"    }"},{"highlight_end":52,"highlight_start":1,"text":"    for (e, &o_vowel) in word.chars()[8..].iter() {"},{"highlight_end":101,"highlight_start":1,"text":"        if o_vowel != \"e\" && o_vowel != \"a\" {  // Skip vowels at the beginning and end of the string"},{"highlight_end":22,"highlight_start":1,"text":"            continue;"},{"highlight_end":17,"highlight_start":1,"text":"        } else {"},{"highlight_end":49,"highlight_start":1,"text":"            match hash_map.entry((8, o_vowel)) {"},{"highlight_end":106,"highlight_start":1,"text":"                hashmap::Entry::Occupied(ooccup) => {  // Search for combinations we already tried before"},{"highlight_end":100,"highlight_start":1,"text":"                    let (i, ovowel) = *ooccup.get();  // Take current combination from the hash map"},{"highlight_end":130,"highlight_start":1,"text":"                    if i > x && o_vowel != \"e\" || o_vowel == \"a\" {  // Skip when searching vowels at the beginning of the string "},{"highlight_end":34,"highlight_start":1,"text":"                        continue;"},{"highlight_end":29,"highlight_start":1,"text":"                    } else {"},{"highlight_end":108,"highlight_start":1,"text":"                        let (i, ovowel) = *ooccup.get();  // Search for current combination in the hash map"},{"highlight_end":126,"highlight_start":1,"text":"                        if i > z && ovowel == \"e\" || ovowel == \"a\" {  // Skip when searching vowels at the end of the string "},{"highlight_end":38,"highlight_start":1,"text":"                            continue;"},{"highlight_end":33,"highlight_start":1,"text":"                        } else {"},{"highlight_end":63,"highlight_start":1,"text":"                            let distance: i8 = i - (x as i8) +"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":13,"highlight_start":1,"text":"#[cfg(test)]"},{"highlight_end":12,"highlight_start":1,"text":"mod tests {"},{"highlight_end":18,"highlight_start":1,"text":"    use super::*;"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":12,"highlight_start":1,"text":"    #[test]"},{"highlight_end":34,"highlight_start":1,"text":"    fn test_get_closest_vowel() {"},{"highlight_end":54,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"yogurt\"), \"u\");"},{"highlight_end":52,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"full\"), \"u\");"},{"highlight_end":51,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"easy\"), \"\");"},{"highlight_end":51,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"eAsy\"), \"\");"},{"highlight_end":50,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"ali\"), \"\");"},{"highlight_end":51,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"bad\"), \"a\");"},{"highlight_end":52,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"most\"), \"o\");"},{"highlight_end":49,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"ab\"), \"\");"},{"highlight_end":49,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"ba\"), \"\");"},{"highlight_end":52,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"quick\"), \"\");"},{"highlight_end":53,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"anime\"), \"i\");"},{"highlight_end":51,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"Asia\"), \"\");"},{"highlight_end":53,"highlight_start":1,"text":"        assert_eq!(get_closest_vowel(\"Above\"), \"o\");"},{"highlight_end":6,"highlight_start":1,"text":"    }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":3,"highlight_start":1,"text":"}"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_118","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_118.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to previous error\n\n","children":[],"code":null,"level":"error","message":"aborting due to previous error","spans":[]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_118","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_118.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"For more information about this error, try `rustc --explain E0758`.\n","children":[],"code":null,"level":"failure-note","message":"For more information about this error, try `rustc --explain E0758`.","spans":[]}}
{"reason":"build-finished","success":false}
