{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_61","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_61.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this file contains an unclosed delimiter\n  --> src/bin/rust_61.rs:71:3\n   |\n15 | fn correct_bracketing_parenthesis(bkts:&str) -> bool{\n   |                                                     - unclosed delimiter\n...\n20 |     if let Ok(brackets) = brackets.chunks(2) {\n   |                                              - unclosed delimiter\n...\n24 |         {\n   |         - unclosed delimiter\n25 |           //let pair:&[char; 2] = &bracket_pair;\n26 |             match i {\n   |                     - unclosed delimiter\n...\n30 |                 .fold(&mut String::with_capacity(brackets[0].len()), |acc, current| { //combine acc and current with the join function, t...\n   |                      - unclosed delimiter                                           - unclosed delimiter\n...\n40 |                     } {//match brackets.len {\n   |                       - unclosed delimiter\n41 |                      let str = match next_str.chars().map(|c| c).collect(), next_str{\n   |                                                                                     - this delimiter might not be properly closed...\n...\n44 |                         }\n   |                         - ...as it matches this but it has different indentation\n...\n49 |                 match pairs(brackets[0] & \".\".to_string(), bracket_pair\n   |                            - unclosed delimiter\n...\n71 | }\n   |   ^\n\n","children":[],"code":null,"level":"error","message":"this file contains an unclosed delimiter","spans":[{"byte_end":387,"byte_start":386,"column_end":54,"column_start":53,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":53,"text":"fn correct_bracketing_parenthesis(bkts:&str) -> bool{"}]},{"byte_end":615,"byte_start":614,"column_end":47,"column_start":46,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":20,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":46,"text":"    if let Ok(brackets) = brackets.chunks(2) {"}]},{"byte_end":750,"byte_start":749,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":24,"line_start":24,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":9,"text":"        {"}]},{"byte_end":821,"byte_start":820,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":21,"text":"            match i {"}]},{"byte_end":1039,"byte_start":1038,"column_end":23,"column_start":22,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":30,"line_start":30,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":22,"text":"                .fold(&mut String::with_capacity(brackets[0].len()), |acc, current| { //combine acc and current with the join function, taking (str) as parameter instead of T"}]},{"byte_end":1102,"byte_start":1101,"column_end":86,"column_start":85,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":30,"line_start":30,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":85,"text":"                .fold(&mut String::with_capacity(brackets[0].len()), |acc, current| { //combine acc and current with the join function, taking (str) as parameter instead of T"}]},{"byte_end":1671,"byte_start":1670,"column_end":24,"column_start":23,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":40,"line_start":40,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":23,"text":"                    } {//match brackets.len {"}]},{"byte_end":2165,"byte_start":2164,"column_end":29,"column_start":28,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"unclosed delimiter","line_end":49,"line_start":49,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":28,"text":"                match pairs(brackets[0] & \".\".to_string(), bracket_pair"}]},{"byte_end":1778,"byte_start":1778,"column_end":85,"column_start":85,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"this delimiter might not be properly closed...","line_end":41,"line_start":41,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":85,"highlight_start":85,"text":"                     let str = match next_str.chars().map(|c| c).collect(), next_str{"}]},{"byte_end":1929,"byte_start":1929,"column_end":25,"column_start":25,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":false,"label":"...as it matches this but it has different indentation","line_end":44,"line_start":44,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":25,"text":"                        }"}]},{"byte_end":3082,"byte_start":3082,"column_end":3,"column_start":3,"expansion":null,"file_name":"src/bin/rust_61.rs","is_primary":true,"label":null,"line_end":71,"line_start":71,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":3,"highlight_start":3,"text":"}"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_61","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_61.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to previous error\n\n","children":[],"code":null,"level":"error","message":"aborting due to previous error","spans":[]}}
{"reason":"build-finished","success":false}
