{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_41","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_41.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this file contains an unclosed delimiter\n  --> src/bin/rust_41.rs:66:3\n   |\n23 | fn car_race_collision(n:i32)-> i32{\n   |                                   - unclosed delimiter\n...\n32 |     for _ in 0 .. N { //each car is assigned a direction;  the directions can be: left, right, or straight ahead\n   |                     - unclosed delimiter\n...\n42 |     if !hashSet.contains(&\"Car0\".to_string()) { //car 0 starts at the beginning of the line, and is set to drive straight ahead;\n   |                                               - this delimiter might not be properly closed...\n43 |         return 1;};// so it's a collision.\n   |                  - ...as it matches this but it has different indentation\n44 |         \n45 |     for _ in 0 .. N - 1{\n   |                        - unclosed delimiter\n...\n49 |         for _ in 0 .. N {\n   |                         - unclosed delimiter\n50 |             for j in 0..N - 1 { //for each other pair of cars, we loop over both to see if they collide and return collision\n   |                               - unclosed delimiter\n51 |                 match(j ,&\n   |                      - unclosed delimiter\n...\n66 | }\n   |   ^\n\n","children":[],"code":null,"level":"error","message":"this file contains an unclosed delimiter","spans":[{"byte_end":851,"byte_start":850,"column_end":36,"column_start":35,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"unclosed delimiter","line_end":23,"line_start":23,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":35,"text":"fn car_race_collision(n:i32)-> i32{"}]},{"byte_end":1183,"byte_start":1182,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"unclosed delimiter","line_end":32,"line_start":32,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":21,"text":"    for _ in 0 .. N { //each car is assigned a direction;  the directions can be: left, right, or straight ahead"}]},{"byte_end":1986,"byte_start":1985,"column_end":25,"column_start":24,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"unclosed delimiter","line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":24,"text":"    for _ in 0 .. N - 1{"}]},{"byte_end":2409,"byte_start":2408,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"unclosed delimiter","line_end":49,"line_start":49,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":25,"text":"        for _ in 0 .. N {"}]},{"byte_end":2441,"byte_start":2440,"column_end":32,"column_start":31,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"unclosed delimiter","line_end":50,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":31,"text":"            for j in 0..N - 1 { //for each other pair of cars, we loop over both to see if they collide and return collision"}]},{"byte_end":2557,"byte_start":2556,"column_end":23,"column_start":22,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"unclosed delimiter","line_end":51,"line_start":51,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":22,"text":"                match(j ,&"}]},{"byte_end":1827,"byte_start":1827,"column_end":47,"column_start":47,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"this delimiter might not be properly closed...","line_end":42,"line_start":42,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":47,"text":"    if !hashSet.contains(&\"Car0\".to_string()) { //car 0 starts at the beginning of the line, and is set to drive straight ahead;"}]},{"byte_end":1927,"byte_start":1927,"column_end":18,"column_start":18,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":false,"label":"...as it matches this but it has different indentation","line_end":43,"line_start":43,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":18,"text":"        return 1;};// so it's a collision."}]},{"byte_end":2890,"byte_start":2890,"column_end":3,"column_start":3,"expansion":null,"file_name":"src/bin/rust_41.rs","is_primary":true,"label":null,"line_end":66,"line_start":66,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":3,"highlight_start":3,"text":"}"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_41","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_41.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to previous error\n\n","children":[],"code":null,"level":"error","message":"aborting due to previous error","spans":[]}}
{"reason":"build-finished","success":false}
