{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_132","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_132.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: mismatched closing delimiter: `)`\n  --> src/bin/rust_132.rs:43:27\n   |\n43 | ...   for j in 2..9 {if !j.starts_with('[') || (n[i + j] != ']' && ch >= '0' && ch <= '9')){v.push(false);}} else if let Some(&mut v) = n...\n   |                     ^ unclosed delimiter                                                  ^ mismatched closing delimiter\n\n","children":[],"code":null,"level":"error","message":"mismatched closing delimiter: `)`","spans":[{"byte_end":1748,"byte_start":1747,"column_end":98,"column_start":97,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":true,"label":"mismatched closing delimiter","line_end":43,"line_start":43,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":98,"highlight_start":97,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i + j] != ']' && ch >= '0' && ch <= '9')){v.push(false);}} else if let Some(&mut v) = nesting.last_mut() {"}]},{"byte_end":1678,"byte_start":1677,"column_end":28,"column_start":27,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":true,"label":"unclosed delimiter","line_end":43,"line_start":43,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":27,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i + j] != ']' && ch >= '0' && ch <= '9')){v.push(false);}} else if let Some(&mut v) = nesting.last_mut() {"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_132","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_132.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this file contains an unclosed delimiter\n  --> src/bin/rust_132.rs:68:3\n   |\n34 | fn get_all_nested(str: &str) -> (Vec<Vec<bool>>, Vec<Vec<Vec<bool>>>) {\n   |                                                                       - unclosed delimiter\n35 |     let n = str.chars().peekable();\n36 |     if !n || str.contains(\"]\") || str.len() != 10 || n[8..].iter().map(|s| s.starts_with('[')) == false || str.len() % 2 != 0 {return (Vec::new(), Vec::new());} else {\n   |                                                                                                                                                                       - unclosed delimiter\n...\n41 |         for i in 2..9 {\n   |                       - unclosed delimiter\n42 |             if !i.starts_with('[') || (n[i + 1] != ']' && (ch >= '0' && ch <= '9')) {nesting.push(vec![]);} else if let Some(&mut v) = nesting.last_mut() {\n43 |             for j in 2..9 {if !j.starts_with('[') || (n[i + j] != ']' && ch >= '0' && ch <= '9')){v.push(false);}} else if let Some(&mut v) = nesting.last_mut() {\n   |                                                                                                 - missing open `(` for this delimiter                            - unclosed delimiter\n44 |             for j in 2..9 {if !j.starts_with('[') || (n[i +\n   |                           -                          - - unclosed delimiter\n   |                           |                          |\n   |                           unclosed delimiter         unclosed delimiter\n...\n68 | }\n   |   ^\n\n","children":[],"code":null,"level":"error","message":"this file contains an unclosed delimiter","spans":[{"byte_end":1136,"byte_start":1135,"column_end":72,"column_start":71,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":34,"line_start":34,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":71,"text":"fn get_all_nested(str: &str) -> (Vec<Vec<bool>>, Vec<Vec<Vec<bool>>>) {"}]},{"byte_end":1340,"byte_start":1339,"column_end":168,"column_start":167,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":36,"line_start":36,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":168,"highlight_start":167,"text":"    if !n || str.contains(\"]\") || str.len() != 10 || n[8..].iter().map(|s| s.starts_with('[')) == false || str.len() % 2 != 0 {return (Vec::new(), Vec::new());} else {"}]},{"byte_end":1494,"byte_start":1493,"column_end":24,"column_start":23,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":41,"line_start":41,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":23,"text":"        for i in 2..9 {"}]},{"byte_end":1813,"byte_start":1812,"column_end":163,"column_start":162,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":43,"line_start":43,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":163,"highlight_start":162,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i + j] != ']' && ch >= '0' && ch <= '9')){v.push(false);}} else if let Some(&mut v) = nesting.last_mut() {"}]},{"byte_end":1841,"byte_start":1840,"column_end":28,"column_start":27,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":44,"line_start":44,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":27,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i +"}]},{"byte_end":1868,"byte_start":1867,"column_end":55,"column_start":54,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":44,"line_start":44,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":54,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i +"}]},{"byte_end":1870,"byte_start":1869,"column_end":57,"column_start":56,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"unclosed delimiter","line_end":44,"line_start":44,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":56,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i +"}]},{"byte_end":1747,"byte_start":1747,"column_end":97,"column_start":97,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":false,"label":"missing open `(` for this delimiter","line_end":43,"line_start":43,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":97,"text":"            for j in 2..9 {if !j.starts_with('[') || (n[i + j] != ']' && ch >= '0' && ch <= '9')){v.push(false);}} else if let Some(&mut v) = nesting.last_mut() {"}]},{"byte_end":2634,"byte_start":2634,"column_end":3,"column_start":3,"expansion":null,"file_name":"src/bin/rust_132.rs","is_primary":true,"label":null,"line_end":68,"line_start":68,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":3,"highlight_start":3,"text":"}"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_132","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_132.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to 2 previous errors\n\n","children":[],"code":null,"level":"error","message":"aborting due to 2 previous errors","spans":[]}}
{"reason":"build-finished","success":false}
