{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-89f27e1d4194eed3/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/memchr-65d4344c3a86368c/out"}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-fcc8e41b1bbb72cd/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"memchr 2.5.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmemchr-8f02a2eba876215d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex-syntax 0.6.28 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex_syntax-d87efd87ff8e8051.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"md5 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libmd5-a37029e215759d5f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/build/libc-a2202c645d850565/out"}
{"reason":"compiler-artifact","package_id":"aho-corasick 0.7.20 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libaho_corasick-b4033ddd2627ef64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"libc 0.2.139 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/liblibc-4435a060dcfc25c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"regex 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/libregex-646ba2766471edbd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)","manifest_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/home/simao/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/target/debug/deps/librand-54e90b789ee440ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0428]: the name `main` is defined multiple times\n  --> src/bin/rust_60.rs:27:1\n   |\n2  | fn main(){ \n   | --------- previous definition of the value `main` here\n...\n27 | fn main() {\n   | ^^^^^^^^^ `main` redefined here\n   |\n   = note: `main` must be defined only once in the value namespace of this module\n\n","children":[{"children":[],"code":null,"level":"note","message":"`main` must be defined only once in the value namespace of this module","rendered":null,"spans":[]}],"code":{"code":"E0428","explanation":"A type or module has been defined more than once.\n\nErroneous code example:\n\n```compile_fail,E0428\nstruct Bar;\nstruct Bar; // error: duplicate definition of value `Bar`\n```\n\nPlease verify you didn't misspell the type/module's name or remove/rename the\nduplicated one. Example:\n\n```\nstruct Bar;\nstruct Bar2; // ok!\n```\n"},"level":"error","message":"the name `main` is defined multiple times","spans":[{"byte_end":542,"byte_start":533,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":"`main` redefined here","line_end":27,"line_start":27,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"fn main() {"}]},{"byte_end":10,"byte_start":1,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":false,"label":"previous definition of the value `main` here","line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"fn main(){ "}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused imports: `HashMap`, `HashSet`, `ascii::AsciiExt`, `max`, `ops::Index`, `self`, `slice::Iter`\n --> src/bin/rust_60.rs:8:11\n  |\n8 | use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};\n  |           ^^^^^^^^^^^        ^^^  ^^^^                               ^^^^^^^  ^^^^^^^   ^^^^^^^^^^  ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":123,"byte_start":92,"column_end":42,"column_start":11,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":11,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":197,"byte_start":135,"column_end":116,"column_start":54,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":116,"highlight_start":54,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `HashMap`, `HashSet`, `ascii::AsciiExt`, `max`, `ops::Index`, `self`, `slice::Iter`","spans":[{"byte_end":103,"byte_start":92,"column_end":22,"column_start":11,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":11,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":114,"byte_start":111,"column_end":33,"column_start":30,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":30,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":120,"byte_start":116,"column_end":39,"column_start":35,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":35,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":158,"byte_start":151,"column_end":77,"column_start":70,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":77,"highlight_start":70,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":167,"byte_start":160,"column_end":86,"column_start":79,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":79,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":180,"byte_start":170,"column_end":99,"column_start":89,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":99,"highlight_start":89,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]},{"byte_end":197,"byte_start":182,"column_end":116,"column_start":101,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":116,"highlight_start":101,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused import: `rand::Rng`\n --> src/bin/rust_60.rs:9:5\n  |\n9 | use rand::Rng;\n  |     ^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":214,"byte_start":200,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":1,"text":"use rand::Rng;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `rand::Rng`","spans":[{"byte_end":213,"byte_start":204,"column_end":14,"column_start":5,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":5,"text":"use rand::Rng;"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused import: `regex::Regex`\n  --> src/bin/rust_60.rs:10:5\n   |\n10 | use regex::Regex;\n   |     ^^^^^^^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":232,"byte_start":215,"column_end":18,"column_start":1,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":18,"highlight_start":1,"text":"use regex::Regex;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `regex::Regex`","spans":[{"byte_end":231,"byte_start":219,"column_end":17,"column_start":5,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":5,"text":"use regex::Regex;"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused import: `md5`\n  --> src/bin/rust_60.rs:11:5\n   |\n11 | use md5;\n   |     ^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":241,"byte_start":233,"column_end":9,"column_start":1,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":9,"highlight_start":1,"text":"use md5;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `md5`","spans":[{"byte_end":240,"byte_start":237,"column_end":8,"column_start":5,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":8,"highlight_start":5,"text":"use md5;"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused imports: `Any`, `TypeId`\n  --> src/bin/rust_60.rs:12:16\n   |\n12 | use std::any::{Any, TypeId};\n   |                ^^^  ^^^^^^\n\n","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":270,"byte_start":242,"column_end":29,"column_start":1,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":29,"highlight_start":1,"text":"use std::any::{Any, TypeId};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `Any`, `TypeId`","spans":[{"byte_end":260,"byte_start":257,"column_end":19,"column_start":16,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":16,"text":"use std::any::{Any, TypeId};"}]},{"byte_end":268,"byte_start":262,"column_end":27,"column_start":21,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":21,"text":"use std::any::{Any, TypeId};"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: use of deprecated trait `std::ascii::AsciiExt`: use inherent methods instead\n --> src/bin/rust_60.rs:8:108\n  |\n8 | use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};\n  |                                                                                                            ^^^^^^^^\n  |\n  = note: `#[warn(deprecated)]` on by default\n\n","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(deprecated)]` on by default","rendered":null,"spans":[]}],"code":{"code":"deprecated","explanation":null},"level":"warning","message":"use of deprecated trait `std::ascii::AsciiExt`: use inherent methods instead","spans":[{"byte_end":197,"byte_start":189,"column_end":116,"column_start":108,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":116,"highlight_start":108,"text":"use std::{slice::Iter, cmp::{max, self}, mem::replace, collections::{HashSet, HashMap}, ops::Index, ascii::AsciiExt};"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> src/bin/rust_60.rs:19:30\n   |\n19 |             total += replace(total, total);\n   |                      ------- ^^^^^ expected `&mut {integer}`, found integer\n   |                      |\n   |                      arguments to this function are incorrect\n   |\n   = note: expected mutable reference `&mut {integer}`\n                           found type `{integer}`\nnote: function defined here\n  --> /build/rustc-kAv1jW/rustc-1.75.0+dfsg0ubuntu1~bpo0/library/core/src/mem/mod.rs:912:14\nhelp: consider mutably borrowing here\n   |\n19 |             total += replace(&mut total, total);\n   |                              ++++\n\n","children":[{"children":[],"code":null,"level":"note","message":"expected mutable reference `&mut {integer}`\n                found type `{integer}`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"function defined here","rendered":null,"spans":[{"byte_end":33050,"byte_start":33043,"column_end":21,"column_start":14,"expansion":null,"file_name":"/build/rustc-kAv1jW/rustc-1.75.0+dfsg0ubuntu1~bpo0/library/core/src/mem/mod.rs","is_primary":true,"label":null,"line_end":912,"line_start":912,"suggested_replacement":null,"suggestion_applicability":null,"text":[]}]},{"children":[],"code":null,"level":"help","message":"consider mutably borrowing here","rendered":null,"spans":[{"byte_end":433,"byte_start":433,"column_end":30,"column_start":30,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":19,"line_start":19,"suggested_replacement":"&mut ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":30,"text":"            total += replace(total, total);"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":438,"byte_start":433,"column_end":35,"column_start":30,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":"expected `&mut {integer}`, found integer","line_end":19,"line_start":19,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":30,"text":"            total += replace(total, total);"}]},{"byte_end":432,"byte_start":425,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":false,"label":"arguments to this function are incorrect","line_end":19,"line_start":19,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"            total += replace(total, total);"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n  --> src/bin/rust_60.rs:29:28\n   |\n29 |     let res:i32 = sum_to_n(n);\n   |                   -------- ^ expected `i32`, found `&String`\n   |                   |\n   |                   arguments to this function are incorrect\n   |\nnote: function defined here\n  --> src/bin/rust_60.rs:14:4\n   |\n14 | fn sum_to_n(n: i32) -> i32 {\n   |    ^^^^^^^^ ------\n\n","children":[{"children":[],"code":null,"level":"note","message":"function defined here","rendered":null,"spans":[{"byte_end":290,"byte_start":284,"column_end":19,"column_start":13,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":false,"label":"","line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":13,"text":"fn sum_to_n(n: i32) -> i32 {"}]},{"byte_end":283,"byte_start":275,"column_end":12,"column_start":4,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":12,"highlight_start":4,"text":"fn sum_to_n(n: i32) -> i32 {"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":607,"byte_start":606,"column_end":29,"column_start":28,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":true,"label":"expected `i32`, found `&String`","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":28,"text":"    let res:i32 = sum_to_n(n);"}]},{"byte_end":605,"byte_start":597,"column_end":27,"column_start":19,"expansion":null,"file_name":"src/bin/rust_60.rs","is_primary":false,"label":"arguments to this function are incorrect","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":19,"text":"    let res:i32 = sum_to_n(n);"}]}]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to 3 previous errors; 6 warnings emitted\n\n","children":[],"code":null,"level":"error","message":"aborting due to 3 previous errors; 6 warnings emitted","spans":[]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0308, E0428.\n","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0308, E0428.","spans":[]}}
{"reason":"compiler-message","package_id":"rust 0.1.0 (path+file:///home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust)","manifest_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_60","src_path":"/home/simao/Desktop/CodeGeeX2/benchmark/humanevalx/rust/src/bin/rust_60.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0308`.\n","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0308`.","spans":[]}}
{"reason":"build-finished","success":false}
